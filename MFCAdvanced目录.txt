
MFC进阶教程深入浅出版
https://www.bilibili.com/video/av48954369


一、基本概念
SDK:
JDK:
IDE: VS Qt

API:应用程序接口
WINAPI:windows平台下的系统调用，windows.h，调用系统提供的特殊接口，得到系统的资源。
窗口：父窗口和子窗口，客户区和非客户区。

句柄：结构体变量，窗口句柄HWND，图标句柄：HICO
消息队列 消息 窗口过程函数

PostMessage
SendMessage

main()
WinMain()//WINAPI 入口地址

二、winAPI窗口程序
1、定义入口函数WinMain
2、创建一个窗口
    a）设计窗口类WDNCLASS（给成员变量赋值）
    b）注册窗口类
    c）创建窗口
    d）显示和更新窗口
3、消息循环 WM_QUIT退出程序
4、窗口过程函数

三、一个MCF程序（纯代码）
1、应用程序 CWinApp
2、框架类 CFrameWnd

1）有且只有一个全局的应用程序类对象
2）在程序入口函数实现功能 InitInstance()
    A）给框架类MyFrame对象动态分配空间（自动调用它的构造函数）
        a）框架类MyFrame对象构造函数函数里面创建窗口 CWnd::Create
    B）框架类对象显示窗口 CWnd::ShowWindow
    C）框架类对象更新窗口 CWnd::UpdateWindow
    D）保存框架类对象指针 CWinThread::m_pMainWnd

事件处理：
消息映射
1、所操作的类，声明消息映射宏
	// 声明消息映射宏
	DECLARE_MESSAGE_MAP()
2、对应的.cpp定义宏
    //定义消息宏
    BEGIN_MESSAGE_MAP(MyFrame, CFrameWnd)
        ON_WM_LBUTTONDOWN()
    END_MESSAGE_MAP()
3、对应类中，消息处理函数的声明
4、对应.cpp消息处理函数的定义

四、根据向导创建工程
1、文档视图结构
文档：它是一个类，这个类专门来存储数据
视图：它是一个类，这个类专门显示和修改数据
框架类：一个容器，这个容器装了视图
2、几个比较重要的函数
应用程序类：InitInstance()，程序入口地址
框架类CMainFrame：
    PreCreateWindow()创建窗口之前调用
    OnCreate()创建窗口后，触发WM_CREATE,他是WM_CREATE消息处理函数
视图类CView：
    OnDraw():绘图
    WM_PAINT消息处理函数OnPaint()内部调用OnDraw()
    OnPaint()和OnDraw同事存在，只有OnPaint()有效
3、添加消息
a）框架和视图的区别
    选择所需类->右击->属性->消息->WM_LBUTTONDOWN->ADD
    框架就相当于容器，容器放视图
    视图相当于壁纸
四、字符集
ANSI 多字节，单字节
char p[] = "123456";//一个字符一个字节
unicode 宽字符，一个字符2个字节
w_char *p = L"abc";//一个字符两个字节
MFC 自适应字符集
TCHAR：自动适应字节（条件编译）
TEXT("")
_T("")
五、拓展
afx_xxxxx:全局函数，不属于某个具体类
xxxEx: xxxW, 拓展

MFC命名规范：
类名和函数名：单词首字母写
class MyClass{};
void SetName(){}
函数形参：第二个单词开始，首字母大写
isFlag
isPressTest
成员变量：
m_xxxx
m_hWnd

1、请画图描述一下windows平台下消息循环时怎样的一个过程？
2、通过WinAPI实现如下程序
a）左击窗口，获取点击的坐标，通过对话框显示出来。
b）键盘按下（上、下、左、右），通过对话显示出来
3、WinAPI和MFC有什么区别和联系？

第二天（绘图、文本编程、菜单）
    1、简单绘图
        画直线
        a)鼠标按下和抬起
        b）创建画家对象CClientDC
        c）起点和终点
            CDC::MoveTo
            CDC::LineTo
        d）选中所属类->右击->添加变量
    2、画刷和画笔的使用
        a）定义画家
        b）定义画笔（画刷）
        c）把画笔交给画家 CDC::SelectObject
    3、插入符使用
    4、字体操作 CFont
    5、菜单相关操作
二、文本编辑器
1）创建插入符CWnd::CreateSolidCaret()
    a）创建CWnd::CreateSolidCaret()
    b）显示CWnd::ShowCaret()
    c）插入符的高度是根据字体的高度来确定
        获取字体信息CDC::GetTextMetrics()
    d）设置插入符位置CWnd::SetCaretPos()
2）在字符消息处理函数中写字
    a）写字CDC::TextOut()
    b）获取字符串的尺寸信息CDC::GetTextExtent()
    c）截取字符串（CString）左边指定长度的字符str.Left(str.GetLength() - 1);





第三天（对话框、常用控件）
    1、动态图标制作（定时器）
    2、对话框（模态和非模态）
    3、基于对话框的编程
    4、常用控件的使用


DemoWin01
    WindowsAPI窗口

DemoMFC01
    MFC窗口
DemoMFC02
    消息映射
DemoMFC03
    单文档
DemoMFC04
    弹出键盘按下的键
    鼠标左键 画线 鼠标左键 按下消息 抬起消息
    CClientDC dc(this);
	dc.MoveTo(m_point);
	dc.LineTo(point);
    画连续的线 鼠标移动消息 MouseMove
    加载位图
    画刷 画笔 字体 画家
DemoMFC05
    插入符操作










